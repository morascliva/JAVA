class GfG {
    void printPat(int n) {
        int size = 2 * n - 1;
        int[][] pattern = new int[size][size];

        int num = n;
        int rowStart = 0, rowEnd = size - 1;
        int colStart = 0, colEnd = size - 1;

        while (rowStart <= rowEnd && colStart <= colEnd) {
            for (int i = colStart; i <= colEnd; i++)
                pattern[rowStart][i] = num;
            rowStart++;

            for (int i = rowStart; i <= rowEnd; i++)
                pattern[i][colEnd] = num;
            colEnd--;

            if (rowStart <= rowEnd) {
                for (int i = colEnd; i >= colStart; i--)
                    pattern[rowEnd][i] = num;
                rowEnd--;
            }

            if (colStart <= colEnd) {
                for (int i = rowEnd; i >= rowStart; i--)
                    pattern[i][colStart] = num;
                colStart++;
            }

            num--;
        }

        // Printing the pattern
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                System.out.print(pattern[i][j] + " ");
            }
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        GfG gfg = new GfG();
        gfg.printPat(2); // Test with N = 2
        System.out.println();
        gfg.printPat(3); // Test with N = 3
    }
}
