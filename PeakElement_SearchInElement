// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {

        int[] arr = {1, 2, 3, 4, 5, 6, 3, 1};
        int target = 5;
        int ans = search(arr, target);         // arr,target are arguments
        System.out.println(ans);

    }

    public static int search(int[] arr, int target) {             //arr,target are input parameters 
        int peak = peakIndexInMountainArray(arr);
        int firstTry = orderAgnostics(arr, target, 0, peak);
        if (firstTry != -1) {
            return firstTry;
        }
        return orderAgnostics(arr, target, peak + 1, arr.length - 1);
    }

    public static int peakIndexInMountainArray(int[] arr) {
        int start = 0;
        int end = arr.length - 1;

        while (start < end) {
            int mid = start + (end - start) / 2;
            if (arr[mid] > arr[mid + 1]) {
                end = mid;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }

    public static int orderAgnostics(int[] arr, int target, int start, int end) {                \\The orderAgnostics method is used 
                                                                                                  to search for a target element in a
                                                                                                   subarray of the arr array.
        boolean isAsc = arr[start] < arr[end];               // isAsc is the variable being defined 

        while (start <= end) {
            int mid = start + (end - start) / 2;    

            if (arr[mid] == target) {
                return mid;
            }
            if (isAsc) {
                if (target < arr[mid]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            } else {
                if (target > arr[mid]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
        }
        return -1;
    }
}
