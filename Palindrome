class Solution {
    public boolean isPalindrome(int x) {
      
        if (x < 0) {
            return false;
        }

        int original = x; 
        int reversed = 0;

       
        while (x > 0) {
            int digit = x % 10;  
            reversed = reversed * 10 + digit;
            x = x / 10;          
        }

        
        return reversed == original;
    }
}

class GfG {
    public static int palinArray(int[] a, int n) {
        for (int i = 0; i < n; i++) {
            if (!isPalindrome(a[i])) {
                return 0;
            }
        }
        return 1;
    }

    public static boolean isPalindrome(int num) {
        String str = String.valueOf(num);
        int left = 0;
        int right = str.length() - 1;
        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}


valueOf() method: This method takes a parameter of any type (int, float, double, etc.) and returns a string representation of that value.

String.valueOf(num): This expression takes the numerical value stored in the variable num and converts it into a string. The resulting string 
will contain the textual representation of the number.
